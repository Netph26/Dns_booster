#!/bin/bash
## Copyright Â©UDPTeam
## Script to keep-alive your DNSTT server domain record query from target resolver/local dns server
## Run this script excluded to your VPN tunnel (split VPN tunneling mode)
## Run command: ./globe-civ3.sh l

## Your DNSTT Nameserver & your Domain `A` Record
NS='sdns.myudp2.elcavlaw.com'
A='myudp2.elcavlaw.com'

## Repeat dig cmd loop time (seconds) (positive integer only)
LOOP_DELAY=1

## Add your DNS here
declare -a HOSTS=('gtm.lantindns.tech')

## Linux' dig command executable filepath
## Select value: "CUSTOM|C" or "DEFAULT|D"
DIG_EXEC="DEFAULT"
## if set to CUSTOM, enter your custom dig executable path here
CUSTOM_DIG="/data/data/com.termux/files/home/go/bin/fastdig"

######################################
######################################
######################################
######################################
######################################
# VER is defined but not used, commenting it out for now
# VER=0.1

case "${DIG_EXEC}" in
 DEFAULT|D)
 _DIG="$(command -v dig)"
 ;;
 CUSTOM|C)
 _DIG="${CUSTOM_DIG}"
 ;;
esac

# Quote the variable to prevent word splitting
if [ ! "$(${_DIG} --version)" ]; then
 printf "%b" "Dig command failed to run, " \
 "please install dig(dnsutils) or check " \
 "\$DIG_EXEC & \$CUSTOM_DIG variable inside $( cd -- "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )/$(basename "$0") file.\n" && exit 1
fi

endscript() {
  :  # Dummy command to make ShellCheck happy
  unset NS A LOOP_DELAY HOSTS _DIG DIG_EXEC CUSTOM_DIG exit_script
  exit_code=$?
  exit "${exit_code}"
}

trap 'endscript' 2 15

check(){
 for ((i=0; i<"${#HOSTS[*]}"; i++)); do
  for R in "${A}" "${NS}"; do
   T="${HOSTS[$i]}"
   # Double quote variables to prevent word splitting
   original_query_result=$("${_DIG}" @"${T}" "${R}")
   stats_query_result=$("${_DIG}" +stats @"${T}" "${R}")
   
   # Check the results of the original and stats queries
   [[ -z ${original_query_result} ]] && M=31 || M=32;
   echo -e "\e[1;${M}m\$ Original Query Result (R:${R} D:${T}): ${original_query_result}\e[0m"

   [[ -z ${stats_query_result} ]] && M=31 || M=32;
   echo -e "\e[1;${M}m\$ Stats Query Result (R:${R} D:${T}): ${stats_query_result}\e[0m"
   
   unset T R M
  done
 done
}

echo "DNSTT Keep-Alive script <Lantin Nohanih>"
echo -e "DNS List: [\e[1;34m${HOSTS[*]}\e[0m]"
echo "CTRL + C to close script"

# Use (( expr )) instead of let for style
(( "${LOOP_DELAY}" == 1 )) && ((LOOP_DELAY++))

case "${@}" in
 loop|l)
 echo "Script loop: ${LOOP_DELAY} seconds"
 while true; do
  check
  echo '.--. .-.. . .- ... .     .-- .- .. -'
  sleep "${LOOP_DELAY}"
 done
 ;;
 *)
 check
 ;;
esac

exit 0
